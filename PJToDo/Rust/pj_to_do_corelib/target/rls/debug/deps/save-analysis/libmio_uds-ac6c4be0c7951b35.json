{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55],"program":"/Users/zoey.weng/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","mio_uds","/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=ac6c4be0c7951b35","-C","extra-filename=-ac6c4be0c7951b35","--out-dir","/Users/zoey.weng/Desktop/Study/PJToDo/PJToDo/Rust/pj_to_do_corelib/target/rls/debug/deps","-L","dependency=/Users/zoey.weng/Desktop/Study/PJToDo/PJToDo/Rust/pj_to_do_corelib/target/rls/debug/deps","--extern","iovec=/Users/zoey.weng/Desktop/Study/PJToDo/PJToDo/Rust/pj_to_do_corelib/target/rls/debug/deps/libiovec-58786caf83bfd5e9.rmeta","--extern","libc=/Users/zoey.weng/Desktop/Study/PJToDo/PJToDo/Rust/pj_to_do_corelib/target/rls/debug/deps/liblibc-f178d5dee72b91b2.rmeta","--extern","mio=/Users/zoey.weng/Desktop/Study/PJToDo/PJToDo/Rust/pj_to_do_corelib/target/rls/debug/deps/libmio-139dddae56abb2d2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zoey.weng/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,68,101,115,107,116,111,112,47,83,116,117,100,121,47,80,74,84,111,68,111,47,80,74,84,111,68,111,47,82,117,115,116,47,112,106,95,116,111,95,100,111,95,99,111,114,101,108,105,98,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,109,105,111,95,117,100,115,45,97,99,54,99,52,98,101,48,99,55,57,53,49,98,51,53,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"mio_uds","disambiguator":[15779748752999904709,11717123349208854188]},"crate_root":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src","external_crates":[{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2890887578233885874,5152799171468466946]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14062988365976797844,7790830316499212353]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7485944583239190137,15112042312184178752]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[17008131393645190960,12100448432354137563]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[8907850612270385913,16671487671153994367]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17682228612152274229,1641713706473622929]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8936331760674375906,11759799085316440354]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[12661055655625829941,2857214206749325877]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[2227692320214802969,5434377638976631003]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":10,"id":{"name":"iovec","disambiguator":[11723974726839713540,18171804627057238774]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":11,"id":{"name":"libc","disambiguator":[5880633690953326911,2473061792580116559]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":12,"id":{"name":"mio","disambiguator":[6466323475583854239,1244646340221009677]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":13,"id":{"name":"lazycell","disambiguator":[4460087109792475025,1109422820922907237]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":14,"id":{"name":"net2","disambiguator":[974044882974879644,7530140622616107948]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[14698914127431085240,5517492862451562144]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":16,"id":{"name":"slab","disambiguator":[3708181999062796762,6544387781461572339]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","num":17,"id":{"name":"log","disambiguator":[1974070466877256084,5374249391048562239]}}],"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":496,"line_start":1,"line_end":28,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":350},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":276,"byte_end":286,"line_start":18,"line_end":18,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":306,"byte_end":318,"line_start":19,"line_end":19,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":338,"byte_end":350,"line_start":20,"line_end":20,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":496,"line_start":1,"line_end":28,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":102},{"krate":0,"index":176},{"krate":0,"index":222},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336}],"decl_id":null,"docs":" MIO bindings for Unix Domain Sockets\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42,"byte_end":55,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"deny(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":815,"byte_end":827,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":958,"byte_end":962,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":1702,"byte_end":1715,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"from_datagram","qualname":"<UnixDatagram>::from_datagram","value":"fn (stream: net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixDatagram` and returns a wrapped\n `UnixDatagram` compatible with mio.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":2011,"byte_end":2015,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":2359,"byte_end":2366,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":2773,"byte_end":2780,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3193,"byte_end":3202,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixDatagram>::try_clone","value":"fn (&self) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3392,"byte_end":3402,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3616,"byte_end":3625,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":3866,"byte_end":3875,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, net::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4094,"byte_end":4098,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4316,"byte_end":4323,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&self, buf: &[u8], path: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4727,"byte_end":4731,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":4873,"byte_end":4883,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":5249,"byte_end":5257,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":6881,"byte_end":6893,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" A structure representing a Unix domain socket server.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":7028,"byte_end":7032,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":7824,"byte_end":7837,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<UnixListener>::from_listener","value":"fn (stream: net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixListener` and returns a wrapped\n `UnixListener` compatible with mio.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":8359,"byte_end":8365,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&self) -> io::Result<Option<(UnixStream, net::SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":8964,"byte_end":8974,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"accept_std","qualname":"<UnixListener>::accept_std","value":"fn (&self) -> io::Result<Option<(net::UnixStream, net::SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":9665,"byte_end":9674,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixListener>::try_clone","value":"fn (&self) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":9855,"byte_end":9865,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10008,"byte_end":10018,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17319,"byte_end":17329,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17675,"byte_end":17682,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (p: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":18583,"byte_end":18594,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<UnixStream>::from_stream","value":"fn (stream: net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixStream` and returns a wrapped\n `UnixStream` compatible with mio.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":18882,"byte_end":18886,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":19456,"byte_end":19465,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixStream>::try_clone","value":"fn (&self) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":19680,"byte_end":19690,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":19855,"byte_end":19864,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":20006,"byte_end":20016,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":20383,"byte_end":20391,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":21125,"byte_end":21134,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"read_bufs","qualname":"<UnixStream>::read_bufs","value":"fn (&self, bufs: &mut [&mut IoVec]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read in a list of buffers all at once.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":22268,"byte_end":22278,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"write_bufs","qualname":"<UnixStream>::write_bufs","value":"fn (&self, bufs: &[&IoVec]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write a list of buffers all at once.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":868,"byte_end":880,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":5359,"byte_end":5371,"line_start":145,"line_end":145,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6012,"byte_end":6024,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6119,"byte_end":6131,"line_start":173,"line_end":173,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6229,"byte_end":6241,"line_start":179,"line_end":179,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":6934,"byte_end":6946,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10119,"byte_end":10131,"line_start":105,"line_end":105,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10683,"byte_end":10695,"line_start":125,"line_end":125,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10790,"byte_end":10802,"line_start":131,"line_end":131,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10900,"byte_end":10912,"line_start":137,"line_end":137,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":11928,"byte_end":11934,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":14470,"byte_end":14476,"line_start":91,"line_end":91,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17368,"byte_end":17378,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":22811,"byte_end":22821,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23459,"byte_end":23469,"line_start":198,"line_end":198,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23733,"byte_end":23743,"line_start":210,"line_end":210,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24165,"byte_end":24175,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24270,"byte_end":24280,"line_start":236,"line_end":236,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24378,"byte_end":24388,"line_start":242,"line_end":242,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":868,"byte_end":880,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":5359,"byte_end":5371,"line_start":145,"line_end":145,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":338},"to":{"krate":12,"index":34}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6012,"byte_end":6024,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":338},"to":{"krate":1,"index":11564}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6119,"byte_end":6131,"line_start":173,"line_end":173,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":338},"to":{"krate":1,"index":11572}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,100,97,116,97,103,114,97,109,46,114,115],"byte_start":6229,"byte_end":6241,"line_start":179,"line_end":179,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":338},"to":{"krate":1,"index":11568}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":6934,"byte_end":6946,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10119,"byte_end":10131,"line_start":105,"line_end":105,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":344},"to":{"krate":12,"index":34}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10683,"byte_end":10695,"line_start":125,"line_end":125,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":344},"to":{"krate":1,"index":11564}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10790,"byte_end":10802,"line_start":131,"line_end":131,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":344},"to":{"krate":1,"index":11572}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10900,"byte_end":10912,"line_start":137,"line_end":137,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":344},"to":{"krate":1,"index":11568}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":11928,"byte_end":11934,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,111,99,107,101,116,46,114,115],"byte_start":14470,"byte_end":14476,"line_start":91,"line_end":91,"column_start":15,"column_end":21},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":202},"to":{"krate":2,"index":1930}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17368,"byte_end":17378,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":22811,"byte_end":22821,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":350},"to":{"krate":12,"index":34}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23459,"byte_end":23469,"line_start":198,"line_end":198,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":350},"to":{"krate":1,"index":4220}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":23733,"byte_end":23743,"line_start":210,"line_end":210,"column_start":16,"column_end":26},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":350},"to":{"krate":1,"index":4250}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24165,"byte_end":24175,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":350},"to":{"krate":1,"index":11564}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24270,"byte_end":24280,"line_start":236,"line_end":236,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":350},"to":{"krate":1,"index":11572}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,111,45,117,100,115,45,48,46,54,46,55,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24378,"byte_end":24388,"line_start":242,"line_end":242,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":350},"to":{"krate":1,"index":11568}}]}