{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52],"program":"/Users/zoey.weng/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ryu","/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-0.2.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=222bec2990e967f1","-C","extra-filename=-222bec2990e967f1","--out-dir","/Users/zoey.weng/Desktop/Study/PJToDo/PJToDo/Rust/pj_to_do_corelib/target/rls/debug/deps","-L","dependency=/Users/zoey.weng/Desktop/Study/PJToDo/PJToDo/Rust/pj_to_do_corelib/target/rls/debug/deps","--cap-lints","allow","--cfg","integer128","--cfg","must_use_return","--error-format=json","--sysroot","/Users/zoey.weng/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,68,101,115,107,116,111,112,47,83,116,117,100,121,47,80,74,84,111,68,111,47,80,74,84,111,68,111,47,82,117,115,116,47,112,106,95,116,111,95,100,111,95,99,111,114,101,108,105,98,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,121,117,45,50,50,50,98,101,99,50,57,57,48,101,57,54,55,102,49,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"ryu","disambiguator":[3644164286559594444,2148149697811157519]},"crate_root":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-0.2.4/src","external_crates":[{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-0.2.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14062988365976797844,7790830316499212353]}},{"file_name":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-0.2.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7485944583239190137,15112042312184178752]}}],"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2032,"line_start":1,"line_end":68,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1852,"byte_end":1858,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1860,"byte_end":1865,"line_start":62,"line_end":62,"column_start":26,"column_end":31},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1982,"byte_end":1996,"line_start":66,"line_end":66,"column_start":18,"column_end":32},"alias_span":null,"name":"d2s_buffered_n","value":"","parent":{"krate":0,"index":208}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2015,"byte_end":2029,"line_start":67,"line_end":67,"column_start":18,"column_end":32},"alias_span":null,"name":"f2s_buffered_n","value":"","parent":{"krate":0,"index":208}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2032,"line_start":1,"line_end":68,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":48},{"krate":0,"index":60},{"krate":0,"index":102},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":158},{"krate":0,"index":202},{"krate":0,"index":208}],"decl_id":null,"docs":" Pure Rust implementation of RyÅ«, an algorithm to quickly convert floating\n point numbers to decimal strings.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1234,"byte_end":1244,"line_start":32,"line_end":32,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":2383,"byte_end":2389,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" Safe API for formatting floating point numbers to text.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":2372,"byte_end":2414,"line_start":18,"line_end":20,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":2608,"byte_end":2611,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":2539,"byte_end":2548,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":3607,"byte_end":3613,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"fn <F> (&mut self, f: F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":3538,"byte_end":3547,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":4260,"byte_end":4265,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Float","qualname":"::buffer::Float","value":"Float: Sealed","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" A floating point number, f32 or f64, that can be written into a\n [`ryu::Buffer`][Buffer].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":4332,"byte_end":4351,"line_start":76,"line_end":76,"column_start":15,"column_end":34},"name":"write_to_ryu_buffer","qualname":"::buffer::Float::write_to_ryu_buffer","value":"fn (self, result: *mut u8) -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":4808,"byte_end":4814,"line_start":95,"line_end":95,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::buffer::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,100,50,115,46,114,115],"byte_start":24792,"byte_end":24806,"line_start":535,"line_end":535,"column_start":15,"column_end":29},"name":"d2s_buffered_n","qualname":"::d2s::d2s_buffered_n","value":"fn (f: f64, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,100,50,115,46,114,115],"byte_start":24723,"byte_end":24732,"line_start":533,"line_end":533,"column_start":29,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,102,50,115,46,114,115],"byte_start":71390,"byte_end":71404,"line_start":475,"line_end":475,"column_start":15,"column_end":29},"name":"f2s_buffered_n","qualname":"::f2s::f2s_buffered_n","value":"fn (f: f32, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,102,50,115,46,114,115],"byte_start":71321,"byte_end":71330,"line_start":473,"line_end":473,"column_start":29,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1959,"byte_end":1962,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"/Users/zoey.weng/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212}],"decl_id":null,"docs":" Unsafe functions that exactly mirror the API of the C implementation of RyÅ«.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":2421,"byte_end":2427,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":3927,"byte_end":3933,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":2421,"byte_end":2427,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":3927,"byte_end":3933,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":214},"to":{"krate":1,"index":2560}},{"span":{"file_name":[47,85,115,101,114,115,47,122,111,101,121,46,119,101,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,121,117,45,48,46,50,46,52,47,115,114,99,47,98,117,102,102,101,114,47,109,111,100,46,114,115],"byte_start":4267,"byte_end":4273,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":30}}]}